<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='TTC_Deley_2018-2019' path='/workbooks' revision='2.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='ttc_subway_delay_2018_2019' inline='true' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ttc_subway_delay_2018_2019' name='textscan.1918ize1rmwgsv107f9u20b96lm3'>
            <connection class='textscan' directory='C:/ut/TTC-Subway-Delay-Dashboard-2018-2019/Data' filename='ttc_subway_delay_2018_2019.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[station_in_line_2018_2019.csv].[station]' />
              <expression op='[ttc_subway_delay_2018_2019.csv].[station]' />
            </expression>
          </clause>
          <relation connection='textscan.1918ize1rmwgsv107f9u20b96lm3' name='station_in_line_2018_2019.csv' table='[station_in_line_2018_2019#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='station' ordinal='1' />
              <column datatype='real' name='latitude' ordinal='2' />
              <column datatype='real' name='longitude' ordinal='3' />
              <column datatype='string' name='line_name' ordinal='4' />
              <column datatype='real' name='avg_delay_time_2019' ordinal='5' />
              <column datatype='integer' name='num_delays_2019' ordinal='6' />
              <column datatype='integer' name='id' ordinal='7' />
              <column datatype='real' name='avg_delay_time_2018' ordinal='8' />
              <column datatype='integer' name='num_delays_2018' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.1918ize1rmwgsv107f9u20b96lm3' name='ttc_subway_delay_2018_2019.csv' table='[ttc_subway_delay_2018_2019#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='datetime' name='time' ordinal='2' />
              <column datatype='string' name='day' ordinal='3' />
              <column datatype='string' name='station' ordinal='4' />
              <column datatype='string' name='code' ordinal='5' />
              <column datatype='integer' name='min_delay' ordinal='6' />
              <column datatype='integer' name='min_gap' ordinal='7' />
              <column datatype='string' name='bound' ordinal='8' />
              <column datatype='string' name='line' ordinal='9' />
              <column datatype='integer' name='vehicle' ordinal='10' />
              <column datatype='string' name='code_info' ordinal='11' />
              <column datatype='string' name='latitude' ordinal='12' />
              <column datatype='real' name='longitude' ordinal='13' />
              <column datatype='string' name='line_name' ordinal='14' />
              <column datatype='string' name='month' ordinal='15' />
              <column datatype='string' name='time_range' ordinal='16' />
              <column datatype='integer' name='month_number' ordinal='17' />
              <column datatype='integer' name='hour' ordinal='18' />
              <column datatype='integer' name='year' ordinal='19' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F1]' value='[station_in_line_2018_2019.csv].[F1]' />
          <map key='[avg_delay_time_2018]' value='[station_in_line_2018_2019.csv].[avg_delay_time_2018]' />
          <map key='[avg_delay_time_2019]' value='[station_in_line_2018_2019.csv].[avg_delay_time_2019]' />
          <map key='[bound]' value='[ttc_subway_delay_2018_2019.csv].[bound]' />
          <map key='[code]' value='[ttc_subway_delay_2018_2019.csv].[code]' />
          <map key='[code_info]' value='[ttc_subway_delay_2018_2019.csv].[code_info]' />
          <map key='[date]' value='[ttc_subway_delay_2018_2019.csv].[date]' />
          <map key='[day]' value='[ttc_subway_delay_2018_2019.csv].[day]' />
          <map key='[hour]' value='[ttc_subway_delay_2018_2019.csv].[hour]' />
          <map key='[id (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[id]' />
          <map key='[id]' value='[station_in_line_2018_2019.csv].[id]' />
          <map key='[latitude (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[latitude]' />
          <map key='[latitude]' value='[station_in_line_2018_2019.csv].[latitude]' />
          <map key='[line]' value='[ttc_subway_delay_2018_2019.csv].[line]' />
          <map key='[line_name (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[line_name]' />
          <map key='[line_name]' value='[station_in_line_2018_2019.csv].[line_name]' />
          <map key='[longitude (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[longitude]' />
          <map key='[longitude]' value='[station_in_line_2018_2019.csv].[longitude]' />
          <map key='[min_delay]' value='[ttc_subway_delay_2018_2019.csv].[min_delay]' />
          <map key='[min_gap]' value='[ttc_subway_delay_2018_2019.csv].[min_gap]' />
          <map key='[month]' value='[ttc_subway_delay_2018_2019.csv].[month]' />
          <map key='[month_number]' value='[ttc_subway_delay_2018_2019.csv].[month_number]' />
          <map key='[num_delays_2018]' value='[station_in_line_2018_2019.csv].[num_delays_2018]' />
          <map key='[num_delays_2019]' value='[station_in_line_2018_2019.csv].[num_delays_2019]' />
          <map key='[station (ttc_subway_delay_2018_2019.csv)]' value='[ttc_subway_delay_2018_2019.csv].[station]' />
          <map key='[station]' value='[station_in_line_2018_2019.csv].[station]' />
          <map key='[time]' value='[ttc_subway_delay_2018_2019.csv].[time]' />
          <map key='[time_range]' value='[ttc_subway_delay_2018_2019.csv].[time_range]' />
          <map key='[vehicle]' value='[ttc_subway_delay_2018_2019.csv].[vehicle]' />
          <map key='[year]' value='[ttc_subway_delay_2018_2019.csv].[year]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[line_name]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>line_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_delay_time_2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_delay_time_2019]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>avg_delay_time_2019</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_delays_2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_delays_2019]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>num_delays_2019</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_delay_time_2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_delay_time_2018]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>avg_delay_time_2018</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_delays_2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_delays_2018]</local-name>
            <parent-name>[station_in_line_2018_2019.csv]</parent-name>
            <remote-alias>num_delays_2018</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[min_delay]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>min_delay</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_gap</remote-name>
            <remote-type>20</remote-type>
            <local-name>[min_gap]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>min_gap</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bound</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bound]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>bound</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line</remote-name>
            <remote-type>129</remote-type>
            <local-name>[line]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>line</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vehicle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vehicle]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>vehicle</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code_info</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code_info]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>code_info</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[latitude (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>line_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[line_name (ttc_subway_delay_2018_2019.csv)]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>line_name</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_range</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_range]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>time_range</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month_number]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>month_number</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[ttc_subway_delay_2018_2019.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='year' datatype='integer' name='[Calculation_141300469382561793]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Code_Group' datatype='string' name='[Code (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[code]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Operators Related &quot;'>
            <value>&quot;MUCL&quot;</value>
            <value>&quot;MUIE&quot;</value>
            <value>&quot;MUNOA&quot;</value>
            <value>&quot;MUTD&quot;</value>
            <value>&quot;MUTO&quot;</value>
            <value>&quot;MUWR&quot;</value>
            <value>&quot;TRNOA&quot;</value>
            <value>&quot;TRO&quot;</value>
            <value>&quot;TUMVS&quot;</value>
            <value>&quot;TUNIP&quot;</value>
            <value>&quot;TUNOA&quot;</value>
            <value>&quot;TUO&quot;</value>
            <value>&quot;TUOPO&quot;</value>
            <value>&quot;TUOS&quot;</value>
            <value>&quot;TUS&quot;</value>
            <value>&quot;TUSC&quot;</value>
            <value>&quot;TUSUP&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Passengers Related&quot;'>
            <value>&quot;MRUI&quot;</value>
            <value>&quot;MRUIR&quot;</value>
            <value>&quot;MUI&quot;</value>
            <value>&quot;MUIR&quot;</value>
            <value>&quot;MUIRS&quot;</value>
            <value>&quot;MUIS&quot;</value>
            <value>&quot;MUPR1&quot;</value>
            <value>&quot;SRAE&quot;</value>
            <value>&quot;SRAP&quot;</value>
            <value>&quot;SRDP&quot;</value>
            <value>&quot;SRO&quot;</value>
            <value>&quot;SUAE&quot;</value>
            <value>&quot;SUAP&quot;</value>
            <value>&quot;SUDP&quot;</value>
            <value>&quot;SUO&quot;</value>
            <value>&quot;SUPOL&quot;</value>
            <value>&quot;SUSA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Technical Issues&quot;'>
            <value>&quot;ERAC&quot;</value>
            <value>&quot;ERBO&quot;</value>
            <value>&quot;ERCO&quot;</value>
            <value>&quot;ERDB&quot;</value>
            <value>&quot;ERDO&quot;</value>
            <value>&quot;ERHV&quot;</value>
            <value>&quot;ERLT&quot;</value>
            <value>&quot;ERLV&quot;</value>
            <value>&quot;ERME&quot;</value>
            <value>&quot;ERNEA&quot;</value>
            <value>&quot;ERNT&quot;</value>
            <value>&quot;ERPR&quot;</value>
            <value>&quot;ERRA&quot;</value>
            <value>&quot;ERTB&quot;</value>
            <value>&quot;ERTC&quot;</value>
            <value>&quot;ERTL&quot;</value>
            <value>&quot;ERTR&quot;</value>
            <value>&quot;ERVE&quot;</value>
            <value>&quot;ERWA&quot;</value>
            <value>&quot;ERWS&quot;</value>
            <value>&quot;EUAC&quot;</value>
            <value>&quot;EUAL&quot;</value>
            <value>&quot;EUATC&quot;</value>
            <value>&quot;EUBK&quot;</value>
            <value>&quot;EUBO&quot;</value>
            <value>&quot;EUCA&quot;</value>
            <value>&quot;EUCO&quot;</value>
            <value>&quot;EUDO&quot;</value>
            <value>&quot;EUECD&quot;</value>
            <value>&quot;EUHV&quot;</value>
            <value>&quot;EULT&quot;</value>
            <value>&quot;EULV&quot;</value>
            <value>&quot;EUNEA&quot;</value>
            <value>&quot;EUNT&quot;</value>
            <value>&quot;EUOE&quot;</value>
            <value>&quot;EUPI&quot;</value>
            <value>&quot;EUSC&quot;</value>
            <value>&quot;EUTL&quot;</value>
            <value>&quot;EUTM&quot;</value>
            <value>&quot;EUTR&quot;</value>
            <value>&quot;EUTRD&quot;</value>
            <value>&quot;EUVA&quot;</value>
            <value>&quot;EUVE&quot;</value>
            <value>&quot;EUYRD&quot;</value>
            <value>&quot;MRD&quot;</value>
            <value>&quot;MRDD&quot;</value>
            <value>&quot;MRPAA&quot;</value>
            <value>&quot;MRPLA&quot;</value>
            <value>&quot;MRPLB&quot;</value>
            <value>&quot;MRSAN&quot;</value>
            <value>&quot;MRTO&quot;</value>
            <value>&quot;MUATC&quot;</value>
            <value>&quot;MUD&quot;</value>
            <value>&quot;MUDD&quot;</value>
            <value>&quot;MUESA&quot;</value>
            <value>&quot;MUFM&quot;</value>
            <value>&quot;MUFS&quot;</value>
            <value>&quot;MUPAA&quot;</value>
            <value>&quot;MUSAN&quot;</value>
            <value>&quot;MUSC&quot;</value>
            <value>&quot;PRS&quot;</value>
            <value>&quot;PRSL&quot;</value>
            <value>&quot;PRSO&quot;</value>
            <value>&quot;PRSP&quot;</value>
            <value>&quot;PRSW&quot;</value>
            <value>&quot;PRTST&quot;</value>
            <value>&quot;PRW&quot;</value>
            <value>&quot;PUATC&quot;</value>
            <value>&quot;PUCSC&quot;</value>
            <value>&quot;PUCSS&quot;</value>
            <value>&quot;PUDCS&quot;</value>
            <value>&quot;PUMEL&quot;</value>
            <value>&quot;PUOPO&quot;</value>
            <value>&quot;PUSAC&quot;</value>
            <value>&quot;PUSCA&quot;</value>
            <value>&quot;PUSCR&quot;</value>
            <value>&quot;PUSI&quot;</value>
            <value>&quot;PUSIO&quot;</value>
            <value>&quot;PUSIS&quot;</value>
            <value>&quot;PUSNT&quot;</value>
            <value>&quot;PUSRA&quot;</value>
            <value>&quot;PUSSW&quot;</value>
            <value>&quot;PUSTC&quot;</value>
            <value>&quot;PUSTP&quot;</value>
            <value>&quot;PUSTS&quot;</value>
            <value>&quot;PUSWZ&quot;</value>
            <value>&quot;PUTD&quot;</value>
            <value>&quot;PUTDN&quot;</value>
            <value>&quot;PUTIJ&quot;</value>
            <value>&quot;PUTNT&quot;</value>
            <value>&quot;PUTO&quot;</value>
            <value>&quot;PUTOE&quot;</value>
            <value>&quot;PUTR&quot;</value>
            <value>&quot;PUTS&quot;</value>
            <value>&quot;PUTSC&quot;</value>
            <value>&quot;PUTSM&quot;</value>
            <value>&quot;PUTTC&quot;</value>
            <value>&quot;PUTTP&quot;</value>
            <value>&quot;PUTWZ&quot;</value>
            <value>&quot;SRUT&quot;</value>
            <value>&quot;SUCOL&quot;</value>
            <value>&quot;SUEAS&quot;</value>
            <value>&quot;SUG&quot;</value>
            <value>&quot;SUROB&quot;</value>
            <value>&quot;SUSP&quot;</value>
            <value>&quot;SUUT&quot;</value>
            <value>&quot;TRNIP&quot;</value>
            <value>&quot;TRSET&quot;</value>
            <value>&quot;TRTC&quot;</value>
            <value>&quot;TUATC&quot;</value>
            <value>&quot;TUCC&quot;</value>
            <value>&quot;TUDOE&quot;</value>
            <value>&quot;TUKEY&quot;</value>
            <value>&quot;TUML&quot;</value>
            <value>&quot;TUSET&quot;</value>
            <value>&quot;TUST&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
      <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
      <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Id (Ttc Subway Delay 2018 2019.Csv)' datatype='integer' name='[id (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Latitude (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[latitude (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
      <column caption='Line Name (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[line_name (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
      <column caption='Line Name' datatype='string' name='[line_name]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude (Ttc Subway Delay 2018 2019.Csv)' datatype='real' name='[longitude (ttc_subway_delay_2018_2019.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
      <column caption='Min Gap' datatype='integer' name='[min_gap]' role='measure' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Month Number' datatype='integer' name='[month_number]' role='dimension' type='quantitative' />
      <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
      <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Time Range' datatype='string' name='[time_range]' role='dimension' type='nominal' />
      <column caption='Vehicle' datatype='integer' name='[vehicle]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
      <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
      <column-instance column='[line_name]' derivation='None' name='[none:line_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[min_delay]' derivation='Sum' name='[sum:min_delay:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))' hidden='true' name='[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[line]' />
          <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Line,Station)' hidden='true' name='[Action (Line,Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[line]' />
          <groupfilter function='level-members' level='[station]' />
        </groupfilter>
      </group>
      <group caption='Action (Month)' hidden='true' name='[Action (Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[month]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/super/OneDrive/文档/My Tableau Repository/Datasources/ttc_subway_delay_2018_2019.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/26/2020 12:05:01 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[F1]' value='[Extract].[F1]' />
            <map key='[avg_delay_time_2018]' value='[Extract].[avg_delay_time_2018]' />
            <map key='[avg_delay_time_2019]' value='[Extract].[avg_delay_time_2019]' />
            <map key='[bound]' value='[Extract].[bound]' />
            <map key='[code]' value='[Extract].[code]' />
            <map key='[code_info]' value='[Extract].[code_info]' />
            <map key='[date]' value='[Extract].[date]' />
            <map key='[day]' value='[Extract].[day]' />
            <map key='[hour]' value='[Extract].[hour]' />
            <map key='[id (ttc_subway_delay_2018_2019.csv)]' value='[Extract].[id]' />
            <map key='[id]' value='[Extract].[id1]' />
            <map key='[latitude (ttc_subway_delay_2018_2019.csv)]' value='[Extract].[latitude]' />
            <map key='[latitude]' value='[Extract].[latitude1]' />
            <map key='[line]' value='[Extract].[line]' />
            <map key='[line_name (ttc_subway_delay_2018_2019.csv)]' value='[Extract].[line_name]' />
            <map key='[line_name]' value='[Extract].[line_name1]' />
            <map key='[longitude (ttc_subway_delay_2018_2019.csv)]' value='[Extract].[longitude]' />
            <map key='[longitude]' value='[Extract].[longitude1]' />
            <map key='[min_delay]' value='[Extract].[min_delay]' />
            <map key='[min_gap]' value='[Extract].[min_gap]' />
            <map key='[month]' value='[Extract].[month]' />
            <map key='[month_number]' value='[Extract].[month_number]' />
            <map key='[num_delays_2018]' value='[Extract].[num_delays_2018]' />
            <map key='[num_delays_2019]' value='[Extract].[num_delays_2019]' />
            <map key='[station (ttc_subway_delay_2018_2019.csv)]' value='[Extract].[station]' />
            <map key='[station]' value='[Extract].[station1]' />
            <map key='[time]' value='[Extract].[time]' />
            <map key='[time_range]' value='[Extract].[time_range]' />
            <map key='[vehicle]' value='[Extract].[vehicle]' />
            <map key='[year]' value='[Extract].[year]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='ttc_subway_delay_2018_2019' increment-value='%null%' refresh-type='create' rows-inserted='13519' timestamp-start='2020-03-26 00:05:01.144' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>station_in_line_2018_2019.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station1</remote-alias>
              <ordinal>1</ordinal>
              <family>station_in_line_2018_2019.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude1</remote-alias>
              <ordinal>2</ordinal>
              <family>station_in_line_2018_2019.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude1</remote-alias>
              <ordinal>3</ordinal>
              <family>station_in_line_2018_2019.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>73</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>line_name1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[line_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>line_name1</remote-alias>
              <ordinal>4</ordinal>
              <family>station_in_line_2018_2019.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_delay_time_2019</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_delay_time_2019]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_delay_time_2019</remote-alias>
              <ordinal>5</ordinal>
              <family>station_in_line_2018_2019.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>num_delays_2019</remote-name>
              <remote-type>20</remote-type>
              <local-name>[num_delays_2019]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>num_delays_2019</remote-alias>
              <ordinal>6</ordinal>
              <family>station_in_line_2018_2019.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id1</remote-alias>
              <ordinal>7</ordinal>
              <family>station_in_line_2018_2019.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_delay_time_2018</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_delay_time_2018]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_delay_time_2018</remote-alias>
              <ordinal>8</ordinal>
              <family>station_in_line_2018_2019.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>num_delays_2018</remote-name>
              <remote-type>20</remote-type>
              <local-name>[num_delays_2018]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>num_delays_2018</remote-alias>
              <ordinal>9</ordinal>
              <family>station_in_line_2018_2019.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>57</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id (ttc_subway_delay_2018_2019.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>10</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13519</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>11</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1188</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time</remote-name>
              <remote-type>134</remote-type>
              <local-name>[time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time</remote-alias>
              <ordinal>12</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Hour</aggregation>
              <approx-count>1811</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day</remote-name>
              <remote-type>129</remote-type>
              <local-name>[day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day</remote-alias>
              <ordinal>13</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station</remote-name>
              <remote-type>129</remote-type>
              <local-name>[station (ttc_subway_delay_2018_2019.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>station</remote-alias>
              <ordinal>14</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>code</remote-alias>
              <ordinal>15</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>min_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[min_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>min_delay</remote-alias>
              <ordinal>16</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>57</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>min_gap</remote-name>
              <remote-type>20</remote-type>
              <local-name>[min_gap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>min_gap</remote-alias>
              <ordinal>17</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bound</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bound</remote-alias>
              <ordinal>18</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>line</remote-name>
              <remote-type>129</remote-type>
              <local-name>[line]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>line</remote-alias>
              <ordinal>19</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vehicle</remote-name>
              <remote-type>20</remote-type>
              <local-name>[vehicle]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vehicle</remote-alias>
              <ordinal>20</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>826</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>code_info</remote-name>
              <remote-type>129</remote-type>
              <local-name>[code_info]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>code_info</remote-alias>
              <ordinal>21</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>152</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[latitude (ttc_subway_delay_2018_2019.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>22</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>71</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude (ttc_subway_delay_2018_2019.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>23</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>73</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>line_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[line_name (ttc_subway_delay_2018_2019.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>line_name</remote-alias>
              <ordinal>24</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>25</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_range</remote-name>
              <remote-type>129</remote-type>
              <local-name>[time_range]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_range</remote-alias>
              <ordinal>26</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month_number</remote-alias>
              <ordinal>27</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hour</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hour</remote-alias>
              <ordinal>28</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>29</ordinal>
              <family>ttc_subway_delay_2018_2019.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[none:month:nk]'>
          <groupfilter from='&quot;April&quot;' function='range' level='[none:month:nk]' to='&quot;September&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          <target field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' />
        </filter>
        <filter class='categorical' column='[none:year:ok]'>
          <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          <target field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' />
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.521978' measure-ordering='alphabetic' measure-percentage='0.478022' rowDisplayCount='1000' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[sum:min_delay:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ERDO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EUCD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EUVE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MUIE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MUWEA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PUSCA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PUTR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SUEAS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TUNOA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ERWA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EUDO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EUOPO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MRSAN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MUPLA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PUCSC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PUSWZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SREAS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TRTC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EUATC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EUTM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MRWEA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MUIR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MUSAN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PUMO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PUTIS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SUAP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TUKEY&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;MUI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ERLV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ERO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EUHV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MRDD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PRSA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PUSIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PUTTC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SUROB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TUS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ERHV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EUCO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EUYRD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MUESA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MUWR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PUSCR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PUTS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SUG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ERCD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EUBK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EUTR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MUFS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MUSC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PUMST&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PUTNT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SUBT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TUML&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;TUNIP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ERTR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EUO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MRPLA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MUO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PRW&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PUSTP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SRCOL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TRO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ERAC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ERWS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EUPI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MRTO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MUPLB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PUCSS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PUTD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SRO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TUATC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ERTC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EUNEA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MRO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MUIS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MUTO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PUSSW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SRAP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TRNIP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TUSUP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ERCO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EUBO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EUTRD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MUCL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MUTD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PUOPO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PUTO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SUCOL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TUMVS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ERPR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EULT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MRESA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PRSL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PUSNT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PUTTP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SUSA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TUO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TUSC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ERME&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ERRA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EULV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MRIE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PRSO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PUSO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PUTWZ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SUSP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TUSET&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ERTL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EUNT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MRPAA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MUNOA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PRTST&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PUSTC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SRBT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ERVE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EUOE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MRPLB&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PRSP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PUATC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PUSTS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SRDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TRSET&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ERNEA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MRCL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MUDD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MUFM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PRO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PUSI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PUTSC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SUO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TUOPO&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;MUPAA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ERDB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EUCA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EUVA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MUD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PRSW&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PUSAC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PUTOE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TRNOA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EUAC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EUSC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MRUI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MUATC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MUPLC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PUDCS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PUTDN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SRUT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TUCC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ERTB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EUME&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MRNOA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MUIRS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PUSRA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SRAE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SUUT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TUST&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ERLT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ERNT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EUECD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MRD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PRS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PUSIO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PUTSM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SUPOL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TUOS&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SUDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ERBO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EUAL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EUTL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MRUIR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MUPR1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PUMEL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PUTIJ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SUAE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TUDOE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:line_name:nk]' type='palette'>
            <map to='#0055ff'>
              <bucket>&quot;Scarborough Rail Transit&quot;</bucket>
            </map>
            <map to='#00ff00'>
              <bucket>&quot;Bloor Danforth&quot;</bucket>
            </map>
            <map to='#aa007f'>
              <bucket>&quot;Sheppard&quot;</bucket>
            </map>
            <map to='#ffff00'>
              <bucket>&quot;Yonge University Spadina&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:year:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2019</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;September&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;January&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;May&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;October&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;February&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;July&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;November&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;August&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;March&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;December&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;April&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:line:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;BD&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;SRT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SHP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;YU&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Code (group)]' palette='red_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Techenical problem&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Operators Related &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Passagers&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Technical Issues&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Passengers Related&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <filter class='categorical' column='[none:month:nk]' filter-group='2'>
        <groupfilter from='&quot;April&quot;' function='range' level='[none:month:nk]' to='&quot;September&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[none:year:ok]' filter-group='2'>
        <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' />
      </filter>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
      <datasources>
        <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
      </datasources>
      <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]'>
        <groupfilter from='&quot;April&quot;' function='range' level='[none:month:nk]' to='&quot;September&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:year:ok]' member='2018' />
          <groupfilter function='member' level='[none:year:ok]' member='2019' />
        </groupfilter>
        <target field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='subway line' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Line Name' />
        <param name='target' value='subway line' />
      </command>
    </action>
    <action caption='Filter1' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='count by year' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='count by year' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter2' name='[Action3]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='avg by  month' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='avg by  month' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter3' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='count by month' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='count by month' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter4' name='[Action5]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet'>
        <exclude-sheet name='count by stations' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='count by stations' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter5' name='[Action6]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Avg by stations' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Avg by stations' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='All lines delay code count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 25 Delay factor Over all</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter from='&quot;BD&quot;' function='range' level='[none:line:nk]' to='&quot;YU&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' field-type='quantitative' max='1811' min='-159' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{A2944AB5-8C19-4F18-9011-1ABE1BDE51F8}' />
    </worksheet>
    <worksheet name='All lines delay code count (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 25 Delay factor Over all</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;ERAC&quot;' function='range' level='[none:code:nk]' to='&quot;TUSUP&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter from='&quot;BD&quot;' function='range' level='[none:line:nk]' to='&quot;YU&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' />
              <text column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' />
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
              <lod column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0886ECF6-2B85-4F5E-AC57-608FFC8E014C}' />
    </worksheet>
    <worksheet name='Avg by stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[station (ttc_subway_delay_2018_2019.csv)]' derivation='None' name='[none:station (ttc_subway_delay_2018_2019.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' filter-group='4'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' included-values='in-range'>
            <min>9.5</min>
            <max>16.0</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]</cols>
      </table>
      <simple-id uuid='{33675968-4767-403B-B91A-9064D2506B1F}' />
    </worksheet>
    <worksheet name='BD deley code'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#59a14f' fontsize='9'>BD Line Delay Top 10 Factors</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter function='member' level='[none:line:nk]' member='&quot;BD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' num-steps='10' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{2D1BE03E-5505-4A68-88C5-A26D6C54FBAD}' />
    </worksheet>
    <worksheet name='Delay Code_Goup Pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column caption='Code_Group' datatype='string' name='[Code (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[code]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Operators Related &quot;'>
                  <value>&quot;MUCL&quot;</value>
                  <value>&quot;MUIE&quot;</value>
                  <value>&quot;MUNOA&quot;</value>
                  <value>&quot;MUTD&quot;</value>
                  <value>&quot;MUTO&quot;</value>
                  <value>&quot;MUWR&quot;</value>
                  <value>&quot;TRNOA&quot;</value>
                  <value>&quot;TRO&quot;</value>
                  <value>&quot;TUMVS&quot;</value>
                  <value>&quot;TUNIP&quot;</value>
                  <value>&quot;TUNOA&quot;</value>
                  <value>&quot;TUO&quot;</value>
                  <value>&quot;TUOPO&quot;</value>
                  <value>&quot;TUOS&quot;</value>
                  <value>&quot;TUS&quot;</value>
                  <value>&quot;TUSC&quot;</value>
                  <value>&quot;TUSUP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Passengers Related&quot;'>
                  <value>&quot;MRUI&quot;</value>
                  <value>&quot;MRUIR&quot;</value>
                  <value>&quot;MUI&quot;</value>
                  <value>&quot;MUIR&quot;</value>
                  <value>&quot;MUIRS&quot;</value>
                  <value>&quot;MUIS&quot;</value>
                  <value>&quot;MUPR1&quot;</value>
                  <value>&quot;SRAE&quot;</value>
                  <value>&quot;SRAP&quot;</value>
                  <value>&quot;SRDP&quot;</value>
                  <value>&quot;SRO&quot;</value>
                  <value>&quot;SUAE&quot;</value>
                  <value>&quot;SUAP&quot;</value>
                  <value>&quot;SUDP&quot;</value>
                  <value>&quot;SUO&quot;</value>
                  <value>&quot;SUPOL&quot;</value>
                  <value>&quot;SUSA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Technical Issues&quot;'>
                  <value>&quot;ERAC&quot;</value>
                  <value>&quot;ERBO&quot;</value>
                  <value>&quot;ERCO&quot;</value>
                  <value>&quot;ERDB&quot;</value>
                  <value>&quot;ERDO&quot;</value>
                  <value>&quot;ERHV&quot;</value>
                  <value>&quot;ERLT&quot;</value>
                  <value>&quot;ERLV&quot;</value>
                  <value>&quot;ERME&quot;</value>
                  <value>&quot;ERNEA&quot;</value>
                  <value>&quot;ERNT&quot;</value>
                  <value>&quot;ERPR&quot;</value>
                  <value>&quot;ERRA&quot;</value>
                  <value>&quot;ERTB&quot;</value>
                  <value>&quot;ERTC&quot;</value>
                  <value>&quot;ERTL&quot;</value>
                  <value>&quot;ERTR&quot;</value>
                  <value>&quot;ERVE&quot;</value>
                  <value>&quot;ERWA&quot;</value>
                  <value>&quot;ERWS&quot;</value>
                  <value>&quot;EUAC&quot;</value>
                  <value>&quot;EUAL&quot;</value>
                  <value>&quot;EUATC&quot;</value>
                  <value>&quot;EUBK&quot;</value>
                  <value>&quot;EUBO&quot;</value>
                  <value>&quot;EUCA&quot;</value>
                  <value>&quot;EUCO&quot;</value>
                  <value>&quot;EUDO&quot;</value>
                  <value>&quot;EUECD&quot;</value>
                  <value>&quot;EUHV&quot;</value>
                  <value>&quot;EULT&quot;</value>
                  <value>&quot;EULV&quot;</value>
                  <value>&quot;EUNEA&quot;</value>
                  <value>&quot;EUNT&quot;</value>
                  <value>&quot;EUOE&quot;</value>
                  <value>&quot;EUPI&quot;</value>
                  <value>&quot;EUSC&quot;</value>
                  <value>&quot;EUTL&quot;</value>
                  <value>&quot;EUTM&quot;</value>
                  <value>&quot;EUTR&quot;</value>
                  <value>&quot;EUTRD&quot;</value>
                  <value>&quot;EUVA&quot;</value>
                  <value>&quot;EUVE&quot;</value>
                  <value>&quot;EUYRD&quot;</value>
                  <value>&quot;MRD&quot;</value>
                  <value>&quot;MRDD&quot;</value>
                  <value>&quot;MRPAA&quot;</value>
                  <value>&quot;MRPLA&quot;</value>
                  <value>&quot;MRPLB&quot;</value>
                  <value>&quot;MRSAN&quot;</value>
                  <value>&quot;MRTO&quot;</value>
                  <value>&quot;MUATC&quot;</value>
                  <value>&quot;MUD&quot;</value>
                  <value>&quot;MUDD&quot;</value>
                  <value>&quot;MUESA&quot;</value>
                  <value>&quot;MUFM&quot;</value>
                  <value>&quot;MUFS&quot;</value>
                  <value>&quot;MUPAA&quot;</value>
                  <value>&quot;MUSAN&quot;</value>
                  <value>&quot;MUSC&quot;</value>
                  <value>&quot;PRS&quot;</value>
                  <value>&quot;PRSL&quot;</value>
                  <value>&quot;PRSO&quot;</value>
                  <value>&quot;PRSP&quot;</value>
                  <value>&quot;PRSW&quot;</value>
                  <value>&quot;PRTST&quot;</value>
                  <value>&quot;PRW&quot;</value>
                  <value>&quot;PUATC&quot;</value>
                  <value>&quot;PUCSC&quot;</value>
                  <value>&quot;PUCSS&quot;</value>
                  <value>&quot;PUDCS&quot;</value>
                  <value>&quot;PUMEL&quot;</value>
                  <value>&quot;PUOPO&quot;</value>
                  <value>&quot;PUSAC&quot;</value>
                  <value>&quot;PUSCA&quot;</value>
                  <value>&quot;PUSCR&quot;</value>
                  <value>&quot;PUSI&quot;</value>
                  <value>&quot;PUSIO&quot;</value>
                  <value>&quot;PUSIS&quot;</value>
                  <value>&quot;PUSNT&quot;</value>
                  <value>&quot;PUSRA&quot;</value>
                  <value>&quot;PUSSW&quot;</value>
                  <value>&quot;PUSTC&quot;</value>
                  <value>&quot;PUSTP&quot;</value>
                  <value>&quot;PUSTS&quot;</value>
                  <value>&quot;PUSWZ&quot;</value>
                  <value>&quot;PUTD&quot;</value>
                  <value>&quot;PUTDN&quot;</value>
                  <value>&quot;PUTIJ&quot;</value>
                  <value>&quot;PUTNT&quot;</value>
                  <value>&quot;PUTO&quot;</value>
                  <value>&quot;PUTOE&quot;</value>
                  <value>&quot;PUTR&quot;</value>
                  <value>&quot;PUTS&quot;</value>
                  <value>&quot;PUTSC&quot;</value>
                  <value>&quot;PUTSM&quot;</value>
                  <value>&quot;PUTTC&quot;</value>
                  <value>&quot;PUTTP&quot;</value>
                  <value>&quot;PUTWZ&quot;</value>
                  <value>&quot;SRUT&quot;</value>
                  <value>&quot;SUCOL&quot;</value>
                  <value>&quot;SUEAS&quot;</value>
                  <value>&quot;SUG&quot;</value>
                  <value>&quot;SUROB&quot;</value>
                  <value>&quot;SUSP&quot;</value>
                  <value>&quot;SUUT&quot;</value>
                  <value>&quot;TRNIP&quot;</value>
                  <value>&quot;TRSET&quot;</value>
                  <value>&quot;TRTC&quot;</value>
                  <value>&quot;TUATC&quot;</value>
                  <value>&quot;TUCC&quot;</value>
                  <value>&quot;TUDOE&quot;</value>
                  <value>&quot;TUKEY&quot;</value>
                  <value>&quot;TUML&quot;</value>
                  <value>&quot;TUSET&quot;</value>
                  <value>&quot;TUST&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[code]' derivation='Count' name='[cnt:code:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[code]' derivation='Count' name='[pcto:cnt:code:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Code (group)]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Code (group)]' />
              <wedge-size column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[pcto:cnt:code:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:code:qk]' />
              <text column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Code (group)]' />
              <text column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[pcto:cnt:code:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
                <format attr='mark-transparency' value='231' />
                <format attr='size' value='1.6151933670043945' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E4156782-7537-427C-88AA-D6D91123F771}' />
    </worksheet>
    <worksheet name='Delay Percentage Per Line'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[line_name (ttc_subway_delay_2018_2019.csv)]' derivation='Attribute' name='[attr:line_name (ttc_subway_delay_2018_2019.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[code]' derivation='Count' name='[cnt:code:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Line Name (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[line_name (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[code]' derivation='Count' name='[pcto:cnt:code:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter from='&quot;BD&quot;' function='range' level='[none:line:nk]' to='&quot;YU&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' direction='DESC' />
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#ff0000' />
          </style-rule>
          <_.fcp.MarkAnimation.true...style-rule element='animation'>
            <format attr='animation-style' value='as-phased' />
          </_.fcp.MarkAnimation.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
              <size column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[pcto:cnt:code:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:code:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:line_name (ttc_subway_delay_2018_2019.csv):nk]' />
              <text column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
              <text column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[pcto:cnt:code:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='1.5492265224456787' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0A16741B-E17F-482F-A91F-D17978081D4D}' />
    </worksheet>
    <worksheet name='SHP delay code count'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b07aa1' fontsize='9'>SHP Line Delay Top 10 Factors</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter function='member' level='[none:line:nk]' member='&quot;SHP&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' num-steps='7' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{4AAFFEAA-7899-448F-8DF1-BB7FCC212043}' />
    </worksheet>
    <worksheet name='SRT delay court'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7' fontsize='9'>SRT Line Delay Top 10 factors</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERAC&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERBO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERCD&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERCO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERDB&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERDO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERHV&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERLT&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERLV&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERME&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERNEA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERNT&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERPR&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERRA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERTB&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERTC&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERTL&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERTR&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERVE&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERWA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;ERWS&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRCL&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRD&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRDD&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRESA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRIE&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRNOA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRPAA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRPLA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRPLB&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRSAN&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRTO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRUI&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRUIR&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;MRWEA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRS&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRSA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRSL&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRSO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRSP&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRSW&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRTST&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;PRW&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRAE&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRAP&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRBT&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRCOL&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRDP&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SREAS&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;SRUT&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;TRNIP&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;TRNOA&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;TRO&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;TRSET&quot;' />
                  <groupfilter function='member' level='[none:code:nk]' member='&quot;TRTC&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter function='member' level='[none:line:nk]' member='&quot;SRT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' num-steps='10' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{632A1486-F1DF-457F-8ACB-C06CCE1B8090}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column caption='Code_Group' datatype='string' name='[Code (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[code]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Operators Related &quot;'>
                  <value>&quot;MUCL&quot;</value>
                  <value>&quot;MUIE&quot;</value>
                  <value>&quot;MUNOA&quot;</value>
                  <value>&quot;MUTD&quot;</value>
                  <value>&quot;MUTO&quot;</value>
                  <value>&quot;MUWR&quot;</value>
                  <value>&quot;TRNOA&quot;</value>
                  <value>&quot;TRO&quot;</value>
                  <value>&quot;TUMVS&quot;</value>
                  <value>&quot;TUNIP&quot;</value>
                  <value>&quot;TUNOA&quot;</value>
                  <value>&quot;TUO&quot;</value>
                  <value>&quot;TUOPO&quot;</value>
                  <value>&quot;TUOS&quot;</value>
                  <value>&quot;TUS&quot;</value>
                  <value>&quot;TUSC&quot;</value>
                  <value>&quot;TUSUP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Passengers Related&quot;'>
                  <value>&quot;MRUI&quot;</value>
                  <value>&quot;MRUIR&quot;</value>
                  <value>&quot;MUI&quot;</value>
                  <value>&quot;MUIR&quot;</value>
                  <value>&quot;MUIRS&quot;</value>
                  <value>&quot;MUIS&quot;</value>
                  <value>&quot;MUPR1&quot;</value>
                  <value>&quot;SRAE&quot;</value>
                  <value>&quot;SRAP&quot;</value>
                  <value>&quot;SRDP&quot;</value>
                  <value>&quot;SRO&quot;</value>
                  <value>&quot;SUAE&quot;</value>
                  <value>&quot;SUAP&quot;</value>
                  <value>&quot;SUDP&quot;</value>
                  <value>&quot;SUO&quot;</value>
                  <value>&quot;SUPOL&quot;</value>
                  <value>&quot;SUSA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Technical Issues&quot;'>
                  <value>&quot;ERAC&quot;</value>
                  <value>&quot;ERBO&quot;</value>
                  <value>&quot;ERCO&quot;</value>
                  <value>&quot;ERDB&quot;</value>
                  <value>&quot;ERDO&quot;</value>
                  <value>&quot;ERHV&quot;</value>
                  <value>&quot;ERLT&quot;</value>
                  <value>&quot;ERLV&quot;</value>
                  <value>&quot;ERME&quot;</value>
                  <value>&quot;ERNEA&quot;</value>
                  <value>&quot;ERNT&quot;</value>
                  <value>&quot;ERPR&quot;</value>
                  <value>&quot;ERRA&quot;</value>
                  <value>&quot;ERTB&quot;</value>
                  <value>&quot;ERTC&quot;</value>
                  <value>&quot;ERTL&quot;</value>
                  <value>&quot;ERTR&quot;</value>
                  <value>&quot;ERVE&quot;</value>
                  <value>&quot;ERWA&quot;</value>
                  <value>&quot;ERWS&quot;</value>
                  <value>&quot;EUAC&quot;</value>
                  <value>&quot;EUAL&quot;</value>
                  <value>&quot;EUATC&quot;</value>
                  <value>&quot;EUBK&quot;</value>
                  <value>&quot;EUBO&quot;</value>
                  <value>&quot;EUCA&quot;</value>
                  <value>&quot;EUCO&quot;</value>
                  <value>&quot;EUDO&quot;</value>
                  <value>&quot;EUECD&quot;</value>
                  <value>&quot;EUHV&quot;</value>
                  <value>&quot;EULT&quot;</value>
                  <value>&quot;EULV&quot;</value>
                  <value>&quot;EUNEA&quot;</value>
                  <value>&quot;EUNT&quot;</value>
                  <value>&quot;EUOE&quot;</value>
                  <value>&quot;EUPI&quot;</value>
                  <value>&quot;EUSC&quot;</value>
                  <value>&quot;EUTL&quot;</value>
                  <value>&quot;EUTM&quot;</value>
                  <value>&quot;EUTR&quot;</value>
                  <value>&quot;EUTRD&quot;</value>
                  <value>&quot;EUVA&quot;</value>
                  <value>&quot;EUVE&quot;</value>
                  <value>&quot;EUYRD&quot;</value>
                  <value>&quot;MRD&quot;</value>
                  <value>&quot;MRDD&quot;</value>
                  <value>&quot;MRPAA&quot;</value>
                  <value>&quot;MRPLA&quot;</value>
                  <value>&quot;MRPLB&quot;</value>
                  <value>&quot;MRSAN&quot;</value>
                  <value>&quot;MRTO&quot;</value>
                  <value>&quot;MUATC&quot;</value>
                  <value>&quot;MUD&quot;</value>
                  <value>&quot;MUDD&quot;</value>
                  <value>&quot;MUESA&quot;</value>
                  <value>&quot;MUFM&quot;</value>
                  <value>&quot;MUFS&quot;</value>
                  <value>&quot;MUPAA&quot;</value>
                  <value>&quot;MUSAN&quot;</value>
                  <value>&quot;MUSC&quot;</value>
                  <value>&quot;PRS&quot;</value>
                  <value>&quot;PRSL&quot;</value>
                  <value>&quot;PRSO&quot;</value>
                  <value>&quot;PRSP&quot;</value>
                  <value>&quot;PRSW&quot;</value>
                  <value>&quot;PRTST&quot;</value>
                  <value>&quot;PRW&quot;</value>
                  <value>&quot;PUATC&quot;</value>
                  <value>&quot;PUCSC&quot;</value>
                  <value>&quot;PUCSS&quot;</value>
                  <value>&quot;PUDCS&quot;</value>
                  <value>&quot;PUMEL&quot;</value>
                  <value>&quot;PUOPO&quot;</value>
                  <value>&quot;PUSAC&quot;</value>
                  <value>&quot;PUSCA&quot;</value>
                  <value>&quot;PUSCR&quot;</value>
                  <value>&quot;PUSI&quot;</value>
                  <value>&quot;PUSIO&quot;</value>
                  <value>&quot;PUSIS&quot;</value>
                  <value>&quot;PUSNT&quot;</value>
                  <value>&quot;PUSRA&quot;</value>
                  <value>&quot;PUSSW&quot;</value>
                  <value>&quot;PUSTC&quot;</value>
                  <value>&quot;PUSTP&quot;</value>
                  <value>&quot;PUSTS&quot;</value>
                  <value>&quot;PUSWZ&quot;</value>
                  <value>&quot;PUTD&quot;</value>
                  <value>&quot;PUTDN&quot;</value>
                  <value>&quot;PUTIJ&quot;</value>
                  <value>&quot;PUTNT&quot;</value>
                  <value>&quot;PUTO&quot;</value>
                  <value>&quot;PUTOE&quot;</value>
                  <value>&quot;PUTR&quot;</value>
                  <value>&quot;PUTS&quot;</value>
                  <value>&quot;PUTSC&quot;</value>
                  <value>&quot;PUTSM&quot;</value>
                  <value>&quot;PUTTC&quot;</value>
                  <value>&quot;PUTTP&quot;</value>
                  <value>&quot;PUTWZ&quot;</value>
                  <value>&quot;SRUT&quot;</value>
                  <value>&quot;SUCOL&quot;</value>
                  <value>&quot;SUEAS&quot;</value>
                  <value>&quot;SUG&quot;</value>
                  <value>&quot;SUROB&quot;</value>
                  <value>&quot;SUSP&quot;</value>
                  <value>&quot;SUUT&quot;</value>
                  <value>&quot;TRNIP&quot;</value>
                  <value>&quot;TRSET&quot;</value>
                  <value>&quot;TRTC&quot;</value>
                  <value>&quot;TUATC&quot;</value>
                  <value>&quot;TUCC&quot;</value>
                  <value>&quot;TUDOE&quot;</value>
                  <value>&quot;TUKEY&quot;</value>
                  <value>&quot;TUML&quot;</value>
                  <value>&quot;TUSET&quot;</value>
                  <value>&quot;TUST&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[code]' derivation='Count' name='[cnt:code:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_range]' derivation='None' name='[none:time_range:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Time Range' datatype='string' name='[time_range]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Code (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:code:qk]</rows>
        <cols>([federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Code (group)] / [federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:time_range:nk])</cols>
      </table>
      <simple-id uuid='{08567AEF-1990-4358-87E6-A08745F7DBB2}' />
    </worksheet>
    <worksheet name='YU delay count'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#edc948' fontsize='9'>YU Line Delay Top 10 Reasons</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code_info]' derivation='Attribute' name='[attr:code_info:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[code]' derivation='None' name='[none:code:nk]' pivot='key' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([min_delay])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]'>
            <groupfilter function='member' level='[none:line:nk]' member='&quot;YU&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' max='693' min='55' num-steps='48' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2f2da</color>
                <color>#f3f3c3</color>
                <color>#f5f5ab</color>
                <color>#f6f693</color>
                <color>#f8f87c</color>
                <color>#f9f963</color>
                <color>#fafa4b</color>
                <color>#fcfc32</color>
                <color>#fdfd19</color>
                <color>#ffff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[attr:code_info:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</cols>
      </table>
      <simple-id uuid='{94C41D2D-7B48-4A7B-8C74-2DCA9AC52EEA}' />
    </worksheet>
    <worksheet name='avg by  month'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</cols>
      </table>
      <simple-id uuid='{FC412B78-165F-412F-B42E-B7CBD1077AC1}' />
    </worksheet>
    <worksheet name='count by month'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</cols>
      </table>
      <simple-id uuid='{6884D682-DD44-421A-90E4-FBDB5F0B78C4}' />
    </worksheet>
    <worksheet name='count by stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[station (ttc_subway_delay_2018_2019.csv)]' derivation='None' name='[none:station (ttc_subway_delay_2018_2019.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' filter-group='4'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' included-values='in-range'>
            <min>180</min>
            <max>653</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]</cols>
      </table>
      <simple-id uuid='{F2D3D001-5F93-4BFD-A1BE-8F7A3D94A411}' />
    </worksheet>
    <worksheet name='count by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station (Ttc Subway Delay 2018 2019.Csv)' datatype='string' name='[station (ttc_subway_delay_2018_2019.csv)]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[line]' />
              <groupfilter function='level-members' level='[station (ttc_subway_delay_2018_2019.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' filter-group='4'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Line,Station (Ttc Subway Delay 2018 2019.Csv))]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{AB353FB6-488E-42A9-BFE3-132EDDEEF44D}' />
    </worksheet>
    <worksheet name='deley count by station'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]'>
            <groupfilter function='level-members' level='[month]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk] + [federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk])</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station:nk]</cols>
      </table>
      <simple-id uuid='{D8953C10-3E22-48FE-B200-79A61E11B9FD}' />
    </worksheet>
    <worksheet name='subway line'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[min_delay]' derivation='Avg' name='[avg:min_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min_delay]' derivation='Count' name='[cnt:min_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Line Name' datatype='string' name='[line_name]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Min Delay' datatype='integer' name='[min_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[line_name]' derivation='None' name='[none:line_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Weekday' name='[wd:date:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[wd:date:ok]'>
            <groupfilter from='1' function='range' level='[wd:date:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[wd:date:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[yr:date:ok]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:longitude:qk]' field-type='quantitative' max='-8819688.0922813453' min='-8855174.6127209887' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:latitude:qk]' field-type='quantitative' max='5435956.0139341829' min='5401256.6254444038' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='2' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' />
              <tooltip column='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Line Name:&#9;</run>
                <run bold='true'>&lt;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Min Delay:&#9;</run>
                <run bold='true'>&lt;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[avg:min_delay:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Min Delay:&#9;</run>
                <run bold='true'>&lt;[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:latitude:qk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{3117B189-56BC-4B96-ABA9-309C23939905}' />
    </worksheet>
    <worksheet name='time range delay count'>
      <table>
        <view>
          <datasources>
            <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
          </datasources>
          <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
            <column-instance column='[code]' derivation='Count' name='[cnt:code:qk]' pivot='key' type='quantitative' />
            <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_range]' derivation='None' name='[none:time_range:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Time Range' datatype='string' name='[time_range]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:time_range:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:code:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</column>
            <column>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:time_range:nk]</rows>
        <cols>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:code:qk]</cols>
      </table>
      <simple-id uuid='{472B78A8-8FD6-4B14-A655-B86EBC7E6512}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='subway line' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='14250' id='8' name='subway line' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='70' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='69' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='subway line' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14250' id='8' name='subway line' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{095BCCA3-FD9D-4BCC-97DC-653A1F25CA4D}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='1500' maxwidth='1200' minheight='1500' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
      </datasources>
      <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
        <column caption='Bound' datatype='string' name='[bound]' role='dimension' type='nominal' />
        <column caption='Line' datatype='string' name='[line]' role='dimension' type='nominal' />
        <column-instance column='[bound]' derivation='None' name='[none:bound:nk]' pivot='key' type='nominal' />
        <column-instance column='[line]' derivation='None' name='[none:line:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98934' id='28' param='horz' type='layout-flow' w='98666' x='667' y='533'>
            <zone h='98934' id='7' param='horz' type='layout-flow' w='85333' x='667' y='533'>
              <zone h='98934' id='5' type='layout-basic' w='85333' x='667' y='533'>
                <zone h='49467' id='13' name='count by year' w='41448' x='667' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24726' id='15' name='count by month' w='43885' x='42115' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='37102' id='17' name='avg by  month' w='43885' x='42115' y='25259'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='37106' id='20' name='count by stations' w='43885' x='42115' y='62361'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45422' id='21' name='Avg by stations' w='41448' x='667' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4045' id='22' name='Avg by stations' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' w='41448' x='667' y='95422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98934' id='27' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86000' y='533'>
              <zone h='7000' id='29' mode='checklist' name='count by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' type='filter' values='database' w='13333' x='86000' y='533'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4066' id='30' mode='checkdropdown' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' type='filter' values='database' w='13333' x='86000' y='7533'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10066' id='35' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' values='database' w='13333' x='86000' y='11599'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13133' id='38' name='count by year' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]' type='filter' values='database' w='13333' x='86000' y='21665'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='88' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='87' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='13133' id='38' mode='checkdropdown' name='count by year' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]' type='filter' values='database' w='13333' x='86000' y='21665'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49467' id='13' is-fixed='true' name='count by year' w='41448' x='667' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24726' id='15' is-fixed='true' name='count by month' w='43885' x='42115' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37102' id='17' is-fixed='true' name='avg by  month' w='43885' x='42115' y='25259'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4066' id='30' mode='checkdropdown' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Month)]' type='filter' values='database' w='13333' x='86000' y='7533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10066' id='35' mode='checkdropdown' name='Avg by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' values='database' w='13333' x='86000' y='11599'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45422' id='21' is-fixed='true' name='Avg by stations' w='41448' x='667' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4045' id='22' name='Avg by stations' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' w='41448' x='667' y='95422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='29' mode='checkdropdown' name='count by stations' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Action (Year)]' type='filter' values='database' w='13333' x='86000' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37106' id='20' is-fixed='true' name='count by stations' w='43885' x='42115' y='62361'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E3071552-07A4-4836-A978-90FEED1B1078}' />
    </dashboard>
    <dashboard name='Dashboard of Delay code count'>
      <style />
      <size maxheight='1000' maxwidth='1000' minheight='1000' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='ttc_subway_delay_2018_2019' name='federated.0xv7ewj0srg00v14kfmrc16yfxtn' />
      </datasources>
      <datasource-dependencies datasource='federated.0xv7ewj0srg00v14kfmrc16yfxtn'>
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='15' param='horz' type='layout-flow' w='98400' x='800' y='800'>
            <zone h='98400' id='7' param='horz' type='layout-flow' w='98400' x='800' y='800'>
              <zone h='98400' id='5' type='layout-basic' w='98400' x='800' y='800'>
                <zone h='32600' id='10' name='BD deley code' w='41900' x='800' y='66600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='28910' id='11' name='YU delay count' w='41900' x='800' y='37690'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='28410' id='12' name='SHP delay code count' w='46400' x='52800' y='37690'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='0' id='55' type='empty' w='46400' x='52800' y='99200' />
                <zone h='36890' id='40' name='Delay Percentage Per Line' w='41900' x='800' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='36890' id='43' name='Delay Code_Goup Pie' w='46400' x='52800' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='0' id='44' name='Delay Code_Goup Pie' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Code (group)]' type='color' w='46400' x='52800' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='79503' id='16' mode='checkdropdown' name='BD deley code' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='filter' values='database' w='10100' x='42700' y='19697'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='18897' id='17' name='BD deley code' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' type='filter' values='database' w='10100' x='42700' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='29300' id='56' name='SRT delay court' w='46200' x='53500' y='70500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='72' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='71' param='vert' type='layout-flow' w='98400' x='800' y='800'>
                <zone fixed-size='280' h='36890' id='40' is-fixed='true' name='Delay Percentage Per Line' w='41900' x='800' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36890' id='43' is-fixed='true' name='Delay Code_Goup Pie' w='46400' x='52800' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='0' id='44' name='Delay Code_Goup Pie' pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Code (group)]' type='color' w='46400' x='52800' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28910' id='11' is-fixed='true' name='YU delay count' w='41900' x='800' y='37690'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='28410' id='12' is-fixed='true' name='SHP delay code count' w='46400' x='52800' y='37690'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='79503' id='16' mode='checkdropdown' name='BD deley code' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='filter' values='database' w='10100' x='42700' y='19697'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18897' id='17' mode='checkdropdown' name='BD deley code' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' type='filter' values='database' w='10100' x='42700' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32600' id='10' is-fixed='true' name='BD deley code' w='41900' x='800' y='66600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29300' id='56' is-fixed='true' name='SRT delay court' w='46200' x='53500' y='70500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8F8436B7-D2F2-46B6-8B16-4DA9D6F237BF}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='subway line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[mn:date:ok]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:latitude:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:longitude:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[wd:date:ok]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{CEA95483-894C-419C-B8FD-3B1C134D3957}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='subway line'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{392843AA-7BC1-4D3C-91E3-7AB01B7AA3C9}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Avg by stations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='avg by  month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='count by month'>
          <zoom type='fit-width' />
          <highlight field='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='count by stations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='count by year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{56C601C3-6FA9-4F37-94CF-ADFF7E0C9743}' />
    </window>
    <window class='worksheet' name='deley count by station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{707B49C1-664C-4736-9213-AEC1F13FA76C}' />
    </window>
    <window class='dashboard' name='Dashboard of Delay code count'>
      <viewpoints>
        <viewpoint name='BD deley code'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Delay Code_Goup Pie'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Code (group)]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Delay Percentage Per Line'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SHP delay code count'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='SRT delay court'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='YU delay count'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{E1E85E11-46CA-4397-8369-B346DF9C1100}' />
    </window>
    <window class='worksheet' name='SRT delay court'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{CEE44D43-6EC4-4300-B180-595F6470CEAD}' />
    </window>
    <window class='worksheet' name='All lines delay code count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{C029B729-F508-4DB5-9CA1-0D2532C48CFD}' />
    </window>
    <window class='worksheet' name='All lines delay code count (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{2E830911-FDA0-4713-8C85-8158FA8CEEFC}' />
    </window>
    <window class='worksheet' name='Delay Percentage Per Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[pcto:cnt:code:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line_name (ttc_subway_delay_2018_2019.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D12474BF-9947-410C-967F-F875BABFB017}' />
    </window>
    <window class='worksheet' name='Delay Code_Goup Pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Code (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Code (group)]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4455A04-E12A-43F9-9647-AD2ECDD4DE25}' />
    </window>
    <window class='worksheet' name='time range delay count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8CB23324-FFCB-42F9-ACDE-4410CEC38537}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Code (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[Code (group)]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[hr:time:ok]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:time_range:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FF2A3B7-6066-445C-B378-CA5AB78D6366}' />
    </window>
    <window class='worksheet' hidden='true' name='Avg by stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74FF4550-DE69-474E-96A7-A487D55CA5FC}' />
    </window>
    <window class='worksheet' hidden='true' name='BD deley code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{AD2E72B2-CA1D-477A-AB9B-7AA773FF3BD1}' />
    </window>
    <window class='worksheet' hidden='true' name='SHP delay code count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{A44F9879-D4B7-4A2F-96DA-E6719776A6C3}' />
    </window>
    <window class='worksheet' hidden='true' name='YU delay count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[cnt:min_delay:qk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:code_info:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{90301F3E-F998-4509-89AA-AEAB16203315}' />
    </window>
    <window class='worksheet' hidden='true' name='avg by  month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0982E10D-6F21-489F-AC79-7C10B7D3EB33}' />
    </window>
    <window class='worksheet' hidden='true' name='count by month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F37934F9-02B1-4B2D-8979-B7E135F23393}' />
    </window>
    <window class='worksheet' hidden='true' name='count by stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:line:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:station (ttc_subway_delay_2018_2019.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68A4EFFB-DD88-44D8-82E4-5C44176A7551}' />
    </window>
    <window class='worksheet' hidden='true' name='count by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:bound:nk]</field>
            <field>[federated.0xv7ewj0srg00v14kfmrc16yfxtn].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{557AB465-EB92-4576-A1C1-A4B1434F2C43}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='All lines delay code count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='All lines delay code count (2)' width='192'>
      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
      ikS2eAaZtwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      GAMIDjX/H8RQzOsx4oRXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard of Delay code count' width='192'>
      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
      uzfC/w8IH6g5MNIdXQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Delay Code_Goup Pie' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay Percentage Per Line' width='192'>
      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
      /wM8fTPBD3PLvwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SRT delay court' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='deley count by station' width='192'>
      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
      SZIk/R+iflucLf9qxwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='subway line' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='time range delay count' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
